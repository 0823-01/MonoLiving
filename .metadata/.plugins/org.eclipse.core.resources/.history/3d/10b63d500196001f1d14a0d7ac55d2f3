<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.io.*, java.net.HttpURLConnection, java.net.URL, java.sql.*" %>
<%@ page import="org.json.simple.JSONObject" %>
<%@ page import="org.json.simple.parser.JSONParser" %>

<%
    String priceStr = request.getParameter("price");
    int price = Integer.parseInt(priceStr); // 가격 확인
    System.out.println("전송된 가격: " + price);
    
    // 세션에서 partner_user_id 가져오기
    String partnerUserId = (String) session.getAttribute("partner_user_id");
    if (partnerUserId == null) {
        partnerUserId = "default_user_id"; // 기본 사용자 ID 설정 (실제 사용자 ID로 바꿔주세요)
        session.setAttribute("partner_user_id", partnerUserId); // partner_user_id 세션에 저장
    }
%>

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>카카오페이 결제 준비</title>
</head>
<body>
<%
    String apiUrl = "https://kapi.kakao.com/v1/payment/ready";
    String adminKey = "3cf90ec67e8e09bae787a5b2e11a21f0";  // 카카오 관리자 키를 입력하세요

    try {
        URL url = new URL(apiUrl);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("POST");
        conn.setRequestProperty("Authorization", "KakaoAK " + adminKey);
        conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        // 요청 파라미터 설정
        String params = "cid=TC0ONETIME" +
                        "&partner_order_id=order_id_1234" +
                        "&partner_user_id=" + partnerUserId + // partner_user_id를 세션에서 가져옴
                        "&item_name=Sample Item" +
                        "&quantity=1" +
                        "&total_amount=" + price + // 여기서 price를 사용하여 가격 설정
                        "&vat_amount=0" +
                        "&tax_free_amount=0" +
                        "&approval_url=http://localhost:8090/mall/views/api/kakaoPaySuccess.jsp" +
                        "&fail_url=http://localhost:8090/mall/views/api/kakaoPaySuccess.jsp" +
                        "&cancel_url=http://localhost:8090/mall/views/api/kakaoPaySuccess.jsp";

        conn.setDoOutput(true);
        // OutputStream으로 파라미터 전송
        try (DataOutputStream dos = new DataOutputStream(conn.getOutputStream())) {
            dos.writeBytes(params);
            dos.flush();
        }

        // 응답 코드 확인
        int responseCode = conn.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            // 응답 읽기
            InputStream is = conn.getInputStream();
            BufferedReader br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
            StringBuilder sb = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
            }
            br.close();

            // JSON 파싱
            JSONParser parser = new JSONParser();
            JSONObject responseJson = (JSONObject) parser.parse(sb.toString());
            String tid = (String) responseJson.get("tid");  // TID 가져오기
            String nextRedirectUrl = (String) responseJson.get("next_redirect_pc_url");

            // TID와 함께 승인 URL로 리다이렉트
            if (tid != null && nextRedirectUrl != null) {
                session.setAttribute("tid", tid); // 세션에 TID 저장
                // 주문 정보 삽입
                try {
                    // 데이터베이스 연결
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection connDB = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "username", "password"); // DB 정보 입력

                    String insertOrderSql = "INSERT INTO orders (ORDER_NO, TOTAL_PRICE, RECIPIENT, ADDRESS, PHONE, STATUS, RES_REQUIREMENT, PAY_CODE, ORDER_ENFORLL, REFUND_DATE, USER_ID) VALUES (orders_seq.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, SYSDATE, NULL, ?)";
                    PreparedStatement pstmt = connDB.prepareStatement(insertOrderSql);
                    
                    // 파라미터 설정 (예시로 고정값 사용)
                    pstmt.setInt(1, price);
                    pstmt.setString(2, "수령인 이름"); // 수령인 이름 설정
                    pstmt.setString(3, "주소"); // 주소 설정
                    pstmt.setString(4, "전화번호"); // 전화번호 설정
                    pstmt.setString(5, "1"); // 주문 상태
                    pstmt.setString(6, "요청사항"); // 요청사항
                    pstmt.setInt(7, 1); // 사용자 ID 설정 (예시로 고정값 사용)

                    pstmt.executeUpdate();
                    pstmt.close();
                    connDB.close();

                    response.sendRedirect(nextRedirectUrl); // 카카오페이로 리디렉션
                } catch (Exception e) {
                    e.printStackTrace();
                    response.getWriter().println("주문 정보 삽입 중 오류 발생: " + e.getMessage());
                }
            } else {
                response.getWriter().println("결제 준비에 실패했습니다. TID 또는 리다이렉트 URL이 null입니다.");
                response.getWriter().println("응답 내용: " + sb.toString());
            }

        } else {
            // 오류 처리
            InputStream errorStream = conn.getErrorStream();
            BufferedReader errorReader = new BufferedReader(new InputStreamReader(errorStream, "UTF-8"));
            StringBuilder errorResponse = new StringBuilder();
            String errorLine;
            while ((errorLine = errorReader.readLine()) != null) {
                errorResponse.append(errorLine);
            }
            errorReader.close();

            response.getWriter().println("결제 준비 중 오류가 발생했습니다. 응답 코드: " + responseCode);
            response.getWriter().println("응답 내용: " + errorResponse.toString());
        }
    } catch (Exception e) {
        response.getWriter().println("오류 발생: " + e.getMessage());
        e.printStackTrace(response.getWriter());
    }
%>
</body>
</html>
