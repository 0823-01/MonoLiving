package com.kh.product.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.kh.common.MyFileRenamePolicy;
import com.kh.product.model.vo.ProductImage;
import com.kh.product.model.vo.ProductInfo;
import com.oreilly.servlet.MultipartRequest;

/**
 * Servlet implementation class ProductUpdateController
 */
@WebServlet("/updateProduct.pr")
public class ProductUpdateController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProductUpdateController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("UTF-8");
		
		if(ServletFileUpload.isMultipartContent(request)) {
			
			int maxSize = 10*1024*1024;
			
			String savePath = request.getServletContext().getRealPath("/resources/product_upfiles/");
			
			MultipartRequest multiRequest 
				= new MultipartRequest(request,
									   savePath,
									   maxSize,
									   "UTF-8",
									   new MyFileRenamePolicy());
			int productNo = Integer.parseInt(multiRequest.getParameter("pno"));
			
			// 상품명 : productName
			String productName = multiRequest.getParameter("productName");
			
			
			// 상품설명 : productDescription
			String productDescription = multiRequest.getParameter("productDescription");
			
			// 카테고리번호 : categoryNo
			int categoryNo = Integer.parseInt(multiRequest.getParameter("categoryNo"));
			
			// 가격 : price
			int price = Integer.parseInt(multiRequest.getParameter("price"));
			
			// 재고 : productQuantity
			int productQuantity = Integer.parseInt(multiRequest.getParameter("productQuantity"));
			
			// 사이즈 : size
			String productSize = multiRequest.getParameter("productSize");
			
			// 재질 : material
			String material = multiRequest.getParameter("material");
			
			// 색상 : color
			String color = multiRequest.getParameter("color");
			
			// 조립여부 : assemblyYN
			String assemblyYN = multiRequest.getParameter("assemblyYN");
			
			// 할인율 : discount
			int discount = Integer.parseInt(multiRequest.getParameter("discount"));
			
			// 제조국 : country
			String country = multiRequest.getParameter("country");

			ProductInfo p = new ProductInfo();
			
			p.setProductName(productName);
			p.setCategoryNo(categoryNo);
			p.setProductDescription(productDescription);
			p.setPrice(price);
			p.setProductQuantity(productQuantity);
			p.setProductSize(productSize);
			p.setMaterial(material);
			p.setColor(color);
			p.setAssemblyYN(assemblyYN);
			p.setDiscount(discount);
			p.setCountry(country);
			
			
			// 여러 개의 첨부파일을 담을 리스트
			ArrayList<ProductImage> pImg = new ArrayList<>();

			// 기존 첨부파일의 정보가 담겨오는지 확인
			String[] imageNo = multiRequest.getParameterValues("imageNo");
			String[] imgSaveFile = multiRequest.getParameterValues("imgSaveFile");

			// 기존 파일이 있을 경우 삭제 또는 수정
			if (imageNo != null) {
				for (int i = 0; i < imageNo.length; i++) {
					int fileNo = Integer.parseInt(imageNo[i]);
					String changeName = imgSaveFile[i];
					
					// 새로운 파일이 업로드된 경우 기존 파일 삭제 후 업데이트
					if (multiRequest.getOriginalFileName("reUpfile" + (i + 1)) != null) {
						ProductImage at = new ProductImage();
						at.setFileNo(fileNo);
						at.setOriginName(multiRequest.getOriginalFileName("reUpfile" + (i + 1)));
						at.setChangeName(multiRequest.getFilesystemName("reUpfile" + (i + 1)));

						// 기존 파일 삭제
						new File(savePath + changeName).delete();
						attachmentList.add(at);
					}
				}
			}

			// 새로운 첨부파일 추가 (기존 첨부파일이 없었던 경우)
			for (int i = 1; i <= 5; i++) { // 최대 5개
				String fileName = "reUpfile" + i;
				if (multiRequest.getOriginalFileName(fileName) != null) {
					Attachment at = new Attachment();
					at.setOriginName(multiRequest.getOriginalFileName(fileName));
					at.setChangeName(multiRequest.getFilesystemName(fileName));
					at.setRefNo(boardNo);
					at.setFilePath("resources/board_upfiles/");
					attachmentList.add(at);
				}
			}

			// 서비스 호출
			int result = new BoardService().updateBoard(b, attachmentList);

			// 결과에 따른 응답 페이지 지정
			if(result > 0) {
				request.getSession().setAttribute("alertMsg", "게시글 수정에 성공했습니다.");
				response.sendRedirect((request.getContextPath() + "/detail.bo?bno=" + boardNo));
			} else {
				request.setAttribute("errorMsg", "게시글 수정에 실패했습니다.");
				request.getRequestDispatcher("views/common/errorPage.jsp").forward(request, response);
			}
			
					
		}
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
