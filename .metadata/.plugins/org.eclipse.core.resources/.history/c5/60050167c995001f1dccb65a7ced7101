package com.kh.product.controller;

import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import static com.kh.common.JDBCTemplate.*; // JDBCTemplate의 static 메소드를 import합니다.
import com.kh.product.model.dao.ProductInfoDao;
import com.kh.product.model.vo.ProductImage;
import com.kh.product.model.vo.ProductInfo;

@WebServlet("/OrderDetailController")
public class OrderDetailController extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        Connection conn = null; // 여기에서 Connection 객체를 생성
        try {
            // DB 연결
            conn = getConnection(); // 데이터베이스 연결 생성
            int productNo = Integer.parseInt(request.getParameter("productNo"));
            ProductInfoDao productDao = new ProductInfoDao();
            
            // 상품 정보 및 이미지 리스트 가져오기
            ProductInfo productInfo = productDao.selectProduct(conn, productNo);
            ArrayList<ProductImage> productImages = productDao.selectProductImg(conn, productNo);
            
            // 데이터 request에 담기
            request.setAttribute("product", productInfo); // "product"로 설정
            request.setAttribute("productImages", productImages);
            
            // JSP 파일로 포워딩
            RequestDispatcher view = request.getRequestDispatcher("views/orderDetail.jsp");
            view.forward(request, response);
        } catch (Exception e) {
            e.printStackTrace();
            // 에러 페이지로 포워딩하거나 적절한 에러 처리를 구현하세요.
        } finally {
            // 연결 해제
            close(conn);
        }
    }
}
