package com.kh.product.controller;

import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.kh.product.model.dao.ProductInfoDao;
import com.kh.product.model.vo.ProductImage;
import com.kh.product.model.vo.ProductInfo;

@WebServlet("/OrderDetailController")
public class OrderDetailController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        Connection conn = null; // 데이터베이스 연결 객체 초기화
        try {
            // 데이터베이스 연결 설정
            conn = // Your method to get the connection; e.g. DBConnection.getConnection();

            int productNo = Integer.parseInt(request.getParameter("productNo"));
            ProductInfoDao productDao = new ProductInfoDao();
            
            // 상품 정보 및 이미지 리스트 가져오기
            ProductInfo productInfo = productDao.selectProduct(conn, productNo);
            ArrayList<ProductImage> productImages = productDao.selectProductImg(conn, productNo);
            
            // 데이터 request에 담기
            request.setAttribute("productInfo", productInfo);
            request.setAttribute("productImages", productImages);
            
            // JSP 파일로 포워딩
            RequestDispatcher view = request.getRequestDispatcher("views/orderDetail.jsp");
            view.forward(request, response);
        } catch (NumberFormatException e) {
            // 잘못된 숫자 포맷 처리
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Invalid product number.");
        } catch (Exception e) {
            // 데이터베이스 연결 또는 쿼리 오류 처리
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Database error.");
        } finally {
            // 연결 종료
            if (conn != null) {
                try {
                    conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
