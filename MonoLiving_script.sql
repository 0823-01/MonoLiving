DROP TABLE PRODUCT_IMAGE;
DROP TABLE CART;
DROP TABLE NOTICE;
DROP TABLE ORDER_PRODUCT;
DROP TABLE ORDERS;
DROP TABLE HEART_PRODUCT;
DROP TABLE REVIEW_IMAGE;
DROP TABLE REVIEW;
DROP TABLE MEMBER;
DROP TABLE PRODUCT_INFO;
DROP TABLE CATEGORY;


DROP SEQUENCE SEQ_IMG_RNO;  -- 리뷰 이미지 테이블의 시퀀스
DROP SEQUENCE SEQ_IMG_PNO;  -- 상품 이미지 테이블의 시퀀스

DROP SEQUENCE SEQ_NNO;  -- 공지사항 테이블의 시퀀스
DROP SEQUENCE SEQ_CTNO;  -- 카테고리 번호
DROP SEQUENCE SEQ_PNO;  -- 상품 테이블의 시퀀스 
DROP SEQUENCE SEQ_CNO;  -- 장바구니 테이블의 시퀀스
DROP SEQUENCE ORDERS_SEQ;  -- 주문 테이블의 시퀀스 
DROP SEQUENCE SEQ_RNO;  -- 리뷰 테이블의 시퀀스 
DROP SEQUENCE SEQ_MNO;  -- 회원 테이블의 시퀀스


----------------------------------------------------------------------------------
----------------------------  MEMBER 테이블 -----------------------------
----------------------------------------------------------------------------------
CREATE TABLE MEMBER (
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(30) NOT NULL UNIQUE,
    USER_PWD VARCHAR2(50) NOT NULL,
    USER_NAME VARCHAR2(10) NOT NULL,
    GENDER CHAR(1) CHECK(GENDER IN ('M', 'F')),
    USER_BIRTH VARCHAR2(8) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    PHONE VARCHAR2(11) NOT NULL,
    ADDRESS VARCHAR2(255) NOT NULL,
    ENROLL_DATE DATE DEFAULT SYSDATE,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.GENDER IS '성별';
COMMENT ON COLUMN MEMBER.USER_BIRTH IS '생년월일';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.ADDRESS IS ' 주소';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.STATUS IS '회원 여부';

CREATE SEQUENCE SEQ_MNO
START WITH 200  -- 시퀀스 시작 값
INCREMENT BY 1  -- 시퀀스 증가 값
NOCACHE;        -- 캐시 사용 안 함 (선택 사항)


-- 더미 데이터 삽입
INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, GENDER, USER_BIRTH, EMAIL, PHONE, ADDRESS, ENROLL_DATE, STATUS)
VALUES (SEQ_MNO.NEXTVAL, 'user1', 'pass1', '안효진', 'F', '20020321', 'hj@example.com', '01012345678', '부천시 소사구', SYSDATE, DEFAULT);

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, GENDER, USER_BIRTH, EMAIL, PHONE, ADDRESS, ENROLL_DATE, STATUS)
VALUES (SEQ_MNO.NEXTVAL, 'user2', 'pass2', '김다훈', 'M', '20010823', 'dh@example.com', '01098765432', '영등포구 당산동', SYSDATE, DEFAULT);

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, GENDER, USER_BIRTH, EMAIL, PHONE, ADDRESS, ENROLL_DATE, STATUS)
VALUES (SEQ_MNO.NEXTVAL, 'user3', 'pass3', '윤예원', 'F', '19971021', 'yw@example.com', '01012349876', '부천시 상동', SYSDATE, DEFAULT);

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, GENDER, USER_BIRTH, EMAIL, PHONE, ADDRESS, ENROLL_DATE, STATUS)
VALUES (SEQ_MNO.NEXTVAL, 'user4', 'pass4', '김준석', 'M', '20001212', 'js@example.com', '01087654321', '인천광역시 구월동', SYSDATE, DEFAULT);



----------------------------------------------------------------------------------
----------------------------  ORDERS 테이블 -----------------------------
----------------------------------------------------------------------------------
CREATE TABLE ORDERS (
    ORDER_NO NUMBER PRIMARY KEY,
    TOTAL_PRICE NUMBER NOT NULL,
    RECIPIENT VARCHAR2(12) NOT NULL,
    ADDRESS VARCHAR2(255) NOT NULL,
    PHONE VARCHAR(11) NOT NULL,
    STATUS CHAR(1) CHECK (STATUS IN ('1', '2')),
    RES_REQUIREMENT VARCHAR2(255) UNIQUE,
    PAY_CODE VARCHAR2(255) NOT NULL UNIQUE,
    ORDER_ENFORLL DATE DEFAULT SYSDATE NOT NULL,
    REFUND_DATE DATE DEFAULT SYSDATE,
    USER_ID VARCHAR2(50),
    FOREIGN KEY (USER_ID) REFERENCES MEMBER(USER_ID)
);
COMMENT ON COLUMN ORDERS.ORDER_NO IS '주문아이디';
COMMENT ON COLUMN ORDERS.TOTAL_PRICE IS '주문 상품 전체 금액';
COMMENT ON COLUMN ORDERS.RECIPIENT IS '수령인';
COMMENT ON COLUMN ORDERS.ADDRESS IS '주소';
COMMENT ON COLUMN ORDERS.PHONE IS '주문회원전화번호';
COMMENT ON COLUMN ORDERS.STATUS IS '1배송중/2배송완료';
COMMENT ON COLUMN ORDERS.RES_REQUIREMENT IS '요청사항';
COMMENT ON COLUMN ORDERS.PAY_CODE IS '결제코드';
COMMENT ON COLUMN ORDERS.ORDER_ENFORLL IS '주문한날짜';
COMMENT ON COLUMN ORDERS.REFUND_DATE IS '환불 완료된 날짜';
COMMENT ON COLUMN ORDERS.USER_ID IS '주문한 회원 번호';

CREATE SEQUENCE ORDERS_SEQ
NOCACHE;

ALTER TABLE orders
ADD PRODUCT_NO NUMBER;

ALTER TABLE ORDERS
RENAME COLUMN ORDER_ENFORLL TO ORDER_ENROLL;

----------------------------------------------------------------------------------
--------------------------  CATEGORY 테이블 ---------------------------
----------------------------------------------------------------------------------
CREATE TABLE CATEGORY (
    CATEGORY_NO NUMBER PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리명';

CREATE SEQUENCE SEQ_CTNO
NOCACHE;

-- 더미데이터
INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '침대');

INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '테이블·식탁·책상');

INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '서랍·수납장');

INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '진열장·책장');

INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '의자');

INSERT INTO CATEGORY
VALUES (SEQ_CTNO.NEXTVAL, '행거·옷장');


----------------------------------------------------------------------------------
-----------------------  PRODUCT_INFO 테이블 -----------------------
----------------------------------------------------------------------------------
CREATE TABLE PRODUCT_INFO (
    PRODUCT_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    PRICE NUMBER NOT NULL,
    PRODUCT_QUANTITY NUMBER NOT NULL,
    PRODUCT_DESCRIPTION VARCHAR2(1000),
    PRODUCT_SIZE VARCHAR2(100) NOT NULL,
    MATERIAL VARCHAR2(100) NOT NULL,
    COLOR VARCHAR2(50) NOT NULL,
    ASSEMBLY_YN CHAR(1) CHECK(ASSEMBLY_YN IN ('Y', 'N')),
    DISCOUNT NUMBER DEFAULT 0 NOT NULL,
    COUNTRY VARCHAR2(100) NOT NULL,
    PRO_CREATE_AT DATE DEFAULT SYSDATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y', 'N')),
    CATEGORY_NO NUMBER NOT NULL,
    FOREIGN KEY (CATEGORY_NO) REFERENCES CATEGORY(CATEGORY_NO) -- 외래 키
);


COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT_INFO.PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_QUANTITY IS '수량';
COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_DESCRIPTION IS '상품설명';
COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_SIZE IS '상품사이즈';
COMMENT ON COLUMN PRODUCT_INFO.MATERIAL IS '소재';
COMMENT ON COLUMN PRODUCT_INFO.COLOR IS '색상';
COMMENT ON COLUMN PRODUCT_INFO.ASSEMBLY_YN IS '조립여부';
COMMENT ON COLUMN PRODUCT_INFO.DISCOUNT IS '할인율';
COMMENT ON COLUMN PRODUCT_INFO.COUNTRY IS '제조국';
COMMENT ON COLUMN PRODUCT_IFO.STATUS IS '상품삭제여부';
COMMENT ON COLUMN PRODUCT_INFO.PRO_CREATE_AT IS '상품등록일';
COMMENT ON COLUMN PRODUCT_INFO.CATEGORY_NO IS '카테고리번호';


CREATE SEQUENCE SEQ_PNO
NOCACHE;

-- 더미 데이터



----------------------------------------------------------------------------------
---------------------  ORDER_PRODUCT 테이블 ---------------------
----------------------------------------------------------------------------------
CREATE TABLE ORDER_PRODUCT (
    ORDER_PRO_NO NUMBER PRIMARY KEY,
    ORDER_NO NUMBER NOT NULL, -- ORDERS 테이블의 ORDER_NO 참조
    PRODUCT_NO NUMBER NOT NULL, -- PRODUCT_INFO 테이블의 PRODUCT_NO 참조
    QUANTITY NUMBER NOT NULL,
    FOREIGN KEY (ORDER_NO) REFERENCES ORDERS(ORDER_NO),
    FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT_INFO(PRODUCT_NO)
);

COMMENT ON COLUMN ORDER_PRODUCT.ORDER_PRO_NO IS '주문상품번호';
COMMENT ON COLUMN ORDER_PRODUCT.ORDER_NO IS '주문아이디';
COMMENT ON COLUMN ORDER_PRODUCT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN ORDER_PRODUCT.QUANTITY IS '상품 수량';



----------------------------------------------------------------------------------
--------------------  HEART_PRODUCT  테이블 ----------------------
----------------------------------------------------------------------------------
CREATE TABLE HEART_PRODUCT (
    USER_ID NUMBER NOT NULL,
    PRODUCT_ID NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_INFO(PRODUCT_NO)
);

COMMENT ON COLUMN HEART_PRODUCT.USER_ID IS '회원번호';
COMMENT ON COLUMN HEART_PRODUCT.PRODUCT_ID IS '상품번호';




----------------------------------------------------------------------------------
------------------------------ CART  테이블 --------------------------------
----------------------------------------------------------------------------------
CREATE TABLE CART (
    CART_NO NUMBER PRIMARY KEY,
    PRODUCT_QUANTITY NUMBER NOT NULL,
    TOTAL_PRICE NUMBER NOT NULL,
    USER_NO NUMBER NOT NULL,
    PRODUCT_NO NUMBER NOT NULL,
    FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT_INFO(PRODUCT_NO)
);

COMMENT ON COLUMN CART.CART_NO IS '장바구니 아이디';
COMMENT ON COLUMN CART.PRODUCT_QUANTITY IS '수량';
COMMENT ON COLUMN CART.TOTAL_PRICE IS '총가격';
COMMENT ON COLUMN CART.USER_NO IS '회원번호';
COMMENT ON COLUMN CART.PRODUCT_NO IS '상품번호';

CREATE SEQUENCE SEQ_CNO
NOCACHE;





----------------------------------------------------------------------------------
-------------------- PRODUCT_IMAGE  테이블 ------------------------
----------------------------------------------------------------------------------
CREATE TABLE PRODUCT_IMAGE (
    IMAGE_NO NUMBER PRIMARY KEY,
    REF_PNO NUMBER NOT NULL,
    IMG_ORIGINAL_FILE VARCHAR2(1000) NOT NULL,
    IMG_SAVE_FILE VARCHAR2(100) NOT NULL UNIQUE,
    IMAGE_URL VARCHAR2(255) NOT NULL,
    IMAGE_DESCRIPTION VARCHAR2(500),
    THUMBNAIL CHAR(1) DEFAULT 'N' CHECK(THUMBNAIL IN('Y', 'N')),
    DELETE_YN CHAR(1) DEFAULT 'N' CHECK(DELETE_YN IN('Y', 'N')),
    FOREIGN KEY (REF_PNO) REFERENCES PRODUCT_INFO(PRODUCT_NO)
);

COMMENT ON COLUMN PRODUCT_IMAGE.IMAGE_NO IS '이미지 번호';
COMMENT ON COLUMN PRODUCT_IMAGE.REF_PNO IS '상품번호';
COMMENT ON COLUMN PRODUCT_IMAGE.IMG_ORIGINAL_FILE IS '원본파일명';
COMMENT ON COLUMN PRODUCT_IMAGE.IMG_SAVE_FILE IS '수정파일명';
COMMENT ON COLUMN PRODUCT_IMAGE.IMAGE_URL IS '이미지경로';
COMMENT ON COLUMN PRODUCT_IMAGE.IMAGE_DESCRIPTION IS '이미지설명';
COMMENT ON COLUMN PRODUCT_IMAGE.THUMBNAIL IS '썸네일 이미지 여부';
COMMENT ON COLUMN PRODUCT_IMAGE.DELETE_YN IS '이미지 삭제 여부';

CREATE SEQUENCE SEQ_IMG_PNO
NOCACHE;



----------------------------------------------------------------------------------
--------------------------- REVIEW  테이블 -------------------------------
----------------------------------------------------------------------------------
CREATE TABLE REVIEW (
    REVIEW_NO NUMBER PRIMARY KEY,
    PRODUCT_NO NUMBER NOT NULL,  -- 연결할 제품 번호
    REVIEW_COMMENT VARCHAR2(500),
    REVIEW_STAR NUMBER(1) NOT NULL,
    REVIEW_DATE DATE DEFAULT SYSDATE NOT NULL,
    REVIEW_DELETE_YN CHAR(1) DEFAULT 'Y' CHECK (REVIEW_DELETE_YN IN('Y', 'N')),
    REVIEW_WRITER NUMBER NOT NULL,  -- 리뷰 작성자
    FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT_INFO(PRODUCT_NO),
    FOREIGN KEY (REVIEW_WRITER) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '리뷰번호';
COMMENT ON COLUMN REVIEW.PRODUCT_NO IS '연결된 제품 번호';
COMMENT ON COLUMN REVIEW.REVIEW_COMMENT IS '리뷰내용';
COMMENT ON COLUMN REVIEW.REVIEW_STAR IS '별점';
COMMENT ON COLUMN REVIEW.REVIEW_DATE IS '리뷰작성일';
COMMENT ON COLUMN REVIEW.REVIEW_DELETE_YN IS '리뷰삭제여부';
COMMENT ON COLUMN REVIEW.REVIEW_WRITER IS '리뷰작성자(=회원번호)';

-- 리뷰 시퀀스 생성
CREATE SEQUENCE SEQ_RNO
START WITH 1  -- 시퀀스 시작 값
INCREMENT BY 100
NOCACHE;



----------------------------------------------------------------------------------
---------------------- REVIEW_IMAGE  테이블 --------------------------
----------------------------------------------------------------------------------
-- REVIEW_IMAGE 테이블 생성
CREATE TABLE REVIEW_IMAGE (
    REVIEW_IMG_NO NUMBER PRIMARY KEY,
    REVIEW_REF_RNO NUMBER NOT NULL,  -- 참조할 리뷰 번호
    REVIEW_ORIGIN_NAME VARCHAR2(255) NOT NULL,
    REVIEW_CHANGE_NAME VARCHAR2(255) NOT NULL UNIQUE,
    REVIEW_IMG_PATH VARCHAR2(255) NOT NULL,
    REVIEW_IMG_DELETE_YN CHAR(1) DEFAULT 'N' CHECK(REVIEW_IMG_DELETE_YN IN('Y', 'N')),
    FOREIGN KEY (REVIEW_REF_RNO) REFERENCES REVIEW(REVIEW_NO)  -- 참조하는 외래 키 설정
);

COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_IMG_NO IS '리뷰이미지번호';
COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_REF_RNO IS '참조 리뷰 번호';
COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_ORIGIN_NAME IS '리뷰 이미지 원본명';
COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_CHANGE_NAME IS '리뷰 이미지 수정명';
COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_IMG_PATH IS '리뷰 이미지 경로';
COMMENT ON COLUMN REVIEW_IMAGE.REVIEW_IMG_DELETE_YN IS '리뷰 이미지 삭제 여부';

-- 이미지 시퀀스 생성
CREATE SEQUENCE SEQ_IMG_RNO
START WITH 1  -- 시퀀스 시작 값
INCREMENT BY 1000
NOCACHE;


----------------------------------------------------------------------------------
--------------------------- NOTICE  테이블 -------------------------------
----------------------------------------------------------------------------------
CREATE TABLE NOTICE (
    NOTICE_NO NUMBER PRIMARY KEY,
    NOTICE_TITLE VARCHAR2(500) NOT NULL,
    NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
    NOTICE_VIEW_COUNT NUMBER DEFAULT 0 NOT NULL,
    NOTICE_CREATE_AT DATE DEFAULT SYSDATE NOT NULL,
    NOTICE_FILE_NAME VARCHAR2(255),
    NOTICE_UPDATE_FILE VARCHAR2(255) UNIQUE,
    NOTICE_FILE_SIZE NUMBER,                                                               -- 추가
    NOTICE_FILE_PATH VARCHAR2(255),
    NOTICE_DELETE_YN CHAR(1) DEFAULT 'N' CHECK(NOTICE_DELETE_YN IN('Y', 'N'))
);


COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 아이디';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항 제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지사항 내용';
COMMENT ON COLUMN NOTICE.NOTICE_VIEW_COUNT IS '조회수';
COMMENT ON COLUMN NOTICE.NOTICE_CREATE_AT IS '공지사항 작성일';
COMMENT ON COLUMN NOTICE.NOTICE_FILE_NAME IS '공지사항 원본 파일명';
COMMENT ON COLUMN NOTICE.NOTICE_UPDATE_FILE IS '공지사항 수정 파일명';
COMMENT ON COLUMN NOTICE.NOTICE_FILE_SIZE IS '공지사항 파일 용량';
COMMENT ON COLUMN NOTICE.NOTICE_FILE_PATH IS '공지사항 파일 경로';
COMMENT ON COLUMN NOTICE.NOTICE_DELETE_YN IS '공지사항 삭제 여부';

CREATE SEQUENCE SEQ_NNO
START WITH 1000  -- 시퀀스 시작 값
INCREMENT BY 100
NOCACHE;



-- 샘플 데이터
INSERT INTO NOTICE VALUES (SEQ_NNO.NEXTVAL, '추석 연휴 배송 안내', '추석 연휴로 인해 배송이 지연될 수 있습니다. 양해 부탁드립니다.', DEFAULT, SYSDATE, NULL, NULL, NULL, NULL, DEFAULT);
INSERT INTO NOTICE VALUES (SEQ_NNO.NEXTVAL, '회원 가입 이벤트 당첨자 발표', '축하드립니다! 이벤트 당첨자는 개별 연락드립니다.', DEFAULT, SYSDATE, 'event_winner.jpg', 'event_winner_v2.jpg', 102400, '/uploads/event/', DEFAULT);
INSERT INTO NOTICE VALUES (SEQ_NNO.NEXTVAL, '10월 할인 이벤트 안내', '전 제품 10% 할인 이벤트가 시작되었습니다. 서둘러 주문하세요!', DEFAULT, SYSDATE, NULL, NULL, NULL, NULL, DEFAULT);
INSERT INTO NOTICE VALUES (SEQ_NNO.NEXTVAL, '시스템 점검 안내', '10월 5일 오전 2시부터 4시까지 시스템 점검이 예정되어 있습니다.', DEFAULT, SYSDATE, NULL, NULL, NULL, NULL, DEFAULT);
INSERT INTO NOTICE VALUES (SEQ_NNO.NEXTVAL, '신제품 출시 예정', '이번 달 말, 새로운 리빙 제품이 출시될 예정입니다.', DEFAULT, SYSDATE, 'new_product.jpg', 'new_product_v2.jpg', 204800, '/uploads/products/', DEFAULT);


-- 2시2분 수정

--수령인 문자열 조절
ALTER TABLE orders MODIFY (RECIPIENT VARCHAR2(50));
--전화번호 조절
ALTER TABLE SHOP.ORDERS MODIFY PHONE VARCHAR2(12);
--길이 수정
ALTER TABLE ORDERS MODIFY RECIPIENT VARCHAR2(20);



-- 테이블 생성
CREATE TABLE payment_info (
    id NUMBER PRIMARY KEY,
    tid VARCHAR2(50) NOT NULL,
    pg_token VARCHAR2(50) NOT NULL,
    user_id VARCHAR2(50) NOT NULL,
    amount NUMBER NOT NULL,
    payment_status VARCHAR2(20) NOT NULL,
    created_date TIMESTAMP DEFAULT SYSTIMESTAMP,
    updated_date TIMESTAMP DEFAULT SYSTIMESTAMP
);


CREATE SEQUENCE PAYMENT_INFO_SEQ
NOCACHE;

